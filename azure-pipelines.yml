# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
      include:
         - main

variables:
  - name: projectPath
    value: './asd-project/client/'
  - name: serverPath
    value: './asd-project/server/'

# pool:
#   vmImage: ubuntu-latest
stages:
- stage: 'Prerequisite'
  displayName: 'Prerequisite'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
  
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      workingDirectory: ${{variables.projectPath}}
      displayName: 'npm install client'

    - script: |
        npm install
      workingDirectory: ${{variables.serverPath}}
      displayName: 'npm install server'
    
    - script: |
        npm run build
      displayName: 'npm build'

# # - script: |
# #     npm run dev
# #   workingDirectory:  ${{variables.serverPath}}
# #   displayName: 'npm run dev server'

# # - script: |
# #     npm start
# #   workingDirectory:  ${{variables.projectPath}}
# #   displayName: 'npm start client'

# - script: |
#     ./node_modules/.bin/cypress run --browser chrome
#   workingDirectory: ${{variables.projectPath}}
#   displayName: 'Run cypress tests'

# - script: |
#     npm run cy:ci
#   workingDirectory: ${{variables.projectPath}}
#   displayName: 'Run cypress tests'

- stage: 'Publish_Test'
  displayName: 'Publish Test'
  jobs: 
  - job: 'Publish'
    displayName: 'Publish Test'
  
    steps:
    - task: PublishTestResults@2
      displayName: 'Publish test results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '*.xml'
        searchFolder: 
          '${{variables.projectPath}}/cypress/reports/junit'
        mergeTestResults: true
        testRunTitle: 'Cypress tests'

- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '6.x'

    steps:
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '*.tgz' 
        targetFolder: $(Build.ArtifactStagingDirectory)/npm
      displayName: 'Copy npm package'

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: 'package.json' 
        targetFolder: $(Build.ArtifactStagingDirectory)/npm
      displayName: 'Copy package.json'   

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/npm'
        artifactName: npm
      displayName: 'Publish npm artifact'

    # - publish: '$(Build.ArtifactStagingDirectory)'
    #   artifact: drop

- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-20.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: npm
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Opal Card Management System Release'
              appName: '$(WebAppName)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'

# stages:
#   - compile
#   - package
#   - test


# stage: compile
#   task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'

# stage: compile
#   script: |
#     npm install
#   workingDirectory: ${{variables.projectPath}}
#   displayName: 'npm install client'

# stage: compile
#   script: |
#     npm install
#   workingDirectory: ${{variables.serverPath}}
#   displayName: 'npm install server'

# stage: package
#   script: |
#     npm run dev
#   workingDirectory:  ${{variables.serverPath}}
#   displayName: 'npm run dev server'

# stage: package
#   script: |
#     npm run cy:ci
#   workingDirectory: ${{variables.projectPath}}
#   displayName: 'Run cypress tests'

# stage: test
#   task: PublishTestResults@2
#   displayName: 'Publish test results'
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '*.xml'
#     searchFolder: 
#       '$(System.DefaultWorkingDirectory)/cypress/reports/junit'
#     mergeTestResults: true
#     testRunTitle: 'Cypress tests'

